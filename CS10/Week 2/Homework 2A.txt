Homework 2A

Hansen Wu
2014.01.21
CS 10 - Foothill College

2.1, 2.3, 2.18.1, 2.23, 2.26.1, 2.26.3

2.1
For the following C statement, what is the corresponding MIPS assembly code? Assume that the variables f, g, h, and i are given and could be considered 32-bit integers as declared in a C program. Use a minimal number of MIPS assembly instructions.
f = g + (h – 5);

addi t0, h, -5
add f, g, t0

2.3
For the following C statement, what is the corresponding MIPS assembly code? Assume that the variables f, g, h, i, and j are assigned to registers $s0, $s1, $s2, $s3, and $s4, respectively. Assume that the base address of the arrays A and B are in registers $s6 and $s7, respectively.
B[8] = A[i–j];

sub $t0, $s3, $s4  # Find result of i-j
sll $t0, $t0, 4    # Byte conversion
add $t0, $t0, $s6  # Find target address in A array
lw $t1, 0($t0)     # Load from the A array
sw $t1, 32($s7)    # store into the B array

2.18.1
Assume that we would like to expand the MIPS register file to 128 registers and expand the instruction set to contain four times as many instructions. How this would this affect the size of each of the bit fields in the R-type instructions?

Expanding the register files would cause other fields in a MIPS instruction to be "squished". This is because one instruction is 32 bits, and if the register size increases, they would take up more than the current 5 bits. That space would have to be taken from one of the other fields, decreasing it's capabilities.
The increase in instructions would limit the capabilities of the opcode field since the number of instructions it needs to accommodate will quadruple.

2.23
Assume $t0 holds the value 0x00101000. What is the value of $t2 after the following instructions?
slt $t2, $0, $t0
bne $t2, $0, ELSE
j DONE
ELSE: addi $t2, $t2, 2
DONE:

0

2.26.1
Consider the following MIPS loop:
LOOP: slt $t2, $0, $t1
beq $t2, $0, DONE
subi $t1, $t1, 1
addi $s2, $s2, 2
j LOOP
DONE:
Assume that the register $t1 is initialized to the value 10. What is the value in register $s2 assuming the $s2 is initially zero?

22

2.26.3
For the loops written in MIPS assembly above, assume that the register $t1 is initialized to the value N. How many MIPS instructions are executed?

5 * (N + 1) + 2