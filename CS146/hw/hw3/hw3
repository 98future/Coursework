3.1

Inserting the following input into hash tables of size 10:
{4371, 1323, 6173, 4199, 4344, 9679, 1989}

a. Separate Chaining

    0:
    1: 4371 ->
    2:
    3: 1323 -> 6173 ->
    4: 4344 ->
    5:
    6:
    7:
    8:
    9: 4199 -> 9679 -> 1989 ->

b. Linear Probing

    0: 9679
    1: 4371
    2: 1989
    3: 1323
    4: 6173
    5: 4344
    6:
    7:
    8:
    9: 4199

c. Quadratic Probing

    f(i) = i^2

    0: 4371
    1: 1989
    2:
    3: 1323
    4: 6173
    5: 4344
    6:
    7:
    8: 9679
    9: 4199

d. Double Hashing

    H1(x) = x mod 10
    H2(x) = 7 âˆ’ (x mod 7)

    0: 1323
    1: 4371
    2:
    3: 1323
    4:
    5:
    6:
    7:
    8:
    9:


3.2

Rehashing 3.1 tables to size of next prime, 23, all result in the same table since there's no collisions.

     0:
     1: 4371
     2:
     3:
     4:
     5:
     6:
     7:
     8:
     9: 6173
    10:
    11: 1989
    12: 1323
    13: 4199
    14:
    15:
    16:
    17:
    18:
    19: 9679
    20: 4344
    21:
    22:


3.3

Separate Chaining Hashing
    Advantage
        - Collided elements do not occupy another location in the hash table
        - Another element can always be added
    Disadvantage
        - Some hash indexes may become essentially a linked list, defeating the purpose by diminishing performance

Linear Probing
    Advantage
        - Solves the disadvantage of separate chaining, maintains
        - An available index will always be found if there's room in the table.
    Disadvantage
        - Does not prevent blocks of indexes in the table from being occupied, resulting in primary clustering.

Quadratic Probing
    Advantage
        - Eliminates primary clustering issue with linear probing
    Disadvantage
        - Causes secondary clustering instead of primary clustering
        - There is no guarantee that an empty cell can be found if the table is more than half full.
        - To maintain a half-full table, rehashing is needed, and is time expensive.

Double Hashing
    Advantage
        - Solves secondary clustering with quadratic probing
    Disadvantage
        - Requires a second hash function - must be well chosen, adds to runtime

Double Hashing is the fastest, since it minimizes the inefficiency caused by clustering, while not needing the second hash function that double hashing uses.


3.4

Missing

3.5

3.6